name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip pylint
      - name: Run pylint
        run: |
          pylint . --output-format=json > pylint-report.json || true
      - name: Show pylint report
        run: cat pylint-report.json
      - name: Upload pylint report
        uses: actions/upload-artifact@v4
        with:
          name: pylint-report
          path: pylint-report.json

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip pytest pytest-cov
      - name: Run tests
        run: |
          pytest --cov=main --cov-report=xml:coverage.xml
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

  e2e:
    runs-on: ubuntu-latest
    container:
      image: selenium/standalone-chrome
      options: --shm-size 2g
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m venv venv
          . venv/bin/activate
          pip install --upgrade pip
          pip install pytest selenium
      - name: Run Selenium tests
        run: |
          . venv/bin/activate
          pytest test/e2e/test_selenium.py

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m venv venv
          . venv/bin/activate
          pip install --upgrade pip
          pip install bandit
      - name: Run bandit
        run: |
          . venv/bin/activate
          bandit -r . -f json -o bandit-report.json || true
      - name: Install Docker
        uses: addnab/docker-run-action@v3
        with:
          image: aquasec/trivy:latest
          options: --rm --entrypoint ""
          run: trivy image --format json -o trivy-report.json my-docker-image:latest
      - name: Upload bandit report
        uses: actions/upload-artifact@v2
        with:
          name: bandit-report
          path: bandit-report.json
      - name: Upload trivy report
        uses: actions/upload-artifact@v2
        with:
          name: trivy-report
          path: trivy-report.json

  sonar:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}